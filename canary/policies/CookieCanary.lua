---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangjinshan.
--- DateTime: 2020/08/14 16:21
---
local utils = require 'kong.plugins.canary';
local cjson = require "cjson"
local cmatch = require 'kong.plugins.canary.policies.cmatch';
local BaseCanary = require 'kong.plugins.canary.policies.BaseCanary';

local policy = "cookie";

local CookieCanary = BaseCanary:new();

function CookieCanary:new(o, conf)
  o = o or BaseCanary:new(o, policy, conf)
  setmetatable(o, self);
  self.__index = self;
  return o;
end

function CookieCanary:handler(fallback)
  if not self.conf.cookie or #self.conf.cookie == 0 then
    return 'next', policy
  end

  local cookies = self.conf.cookie
  for i = 1, #cookies do
    if cookies[i].name and cookies[i].range and #cookies[i].range>0 then
      local values = utils[policy].getValue(cookies[i].name)
      kong.log.notice('conf.name:', cookies[i].name, ',value:', cjson.encode(values))
      if type(values) == 'string' then
        if cmatch.match(cookies[i].range, values,cookies[i].matchType) then
          kong.service.set_target(cookies[i].upstream.host,cookies[i].upstream.port)
          kong.log.notice('Canary policy is ', policy, ',Canary host:', cookies[i].upstream.host);
          return 'end', policy
        end
      elseif type(values) == 'table' then
        for _, v in ipairs(values) do
          if cmatch.match(cookies[i].range, v, cookies[i].matchType) then
            kong.service.set_target(cookies[i].upstream.host,cookies[i].upstream.port)
            kong.log.notice('Canary policy is ', policy, ',Canary host:', cookies[i].upstream.host);
            return 'end', policy
          end
        end
      end
    end
  end

  -- uid upstream is not nil
  return 'next', policy
end

return CookieCanary;
